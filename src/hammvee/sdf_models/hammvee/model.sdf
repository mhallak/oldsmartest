<?xml version="1.0" encoding="utf-8"?>
<!-- -*- mode: XML -*- -->
<!-- Written By : Sagi Vald -->
<sdf version="1.4">
  <model name="hammvee">   <!-- Defining the model that will be loaded to the gazebo -->
    <static>false</static>  <!-- static value determines wheter the model will move and be effected by forces or will be static in the world -->
    <link name="body"> <!-- The model is build from a collection of links that are linked to each other by joints  -->
	<pose>0 1.25 1 0 0 0</pose> <!-- setting body link position and orientation -->
	<inertial>			<!-- setting body link Mass and Inertia Tensor -->
		<pose>0 0 0 0 0 0</pose>
			<mass>2261</mass>
			<inertia>
			<ixx>818.884</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>1232.58</iyy>
			<iyz>0</iyz>
			<izz>1018.05</izz>
			</inertia>
	</inertial>
	<collision name='body_collision'>  <!-- setting body link collision information , position, orientation and geometry -->
	<pose>-1.5 -4.8 -1 0 0 0</pose>
	<geometry> 			 <!-- geometry can be simple like box or cylinder or a complex model file -->
		<mesh>
			<scale>1 1 1</scale>
			<uri>model://hammvee/models/body_collision.dae</uri>
		</mesh>
	</geometry>
	<surface>	
		<contact>
			<ode/>
		</contact>
		<friction>			<!-- setting body link surface friction -->
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='body_visual'> <!-- setting body link visualization information similar to collision information -->
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<mesh>
				<scale>1 1 1</scale>
				<uri>model://hammvee/models/body_visual.dae</uri>
			</mesh>
		</geometry>
	</visual>
	<gravity>1</gravity> <!-- setting body link gravity 1-effected 0-not effected -->
	<velocity_decay><!-- setting body link velocity decay over time -->
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>1</self_collide> <!-- setting body link self collision 1-active 2-inactive -->
    </link>
    <link name="ackerman_front_link">   <!-- setting ackerman front link information -->
	<pose>0.08 -0.8 0.4 0 1.57079 0</pose>
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='ackerman_front_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>1.4</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='ackerman_front_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>1.4</length>
			</cylinder>
		</geometry>
		<material> <!-- setting ackerman front link material -->
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='ackerman_front_link_joint' type='revolute'> <!-- setting ackerman mechanisem this joints connects the front ackerman link with the body link -->
		<pose>0 0 0 0 0 0</pose>                               <!-- this joint is a fixed joint to ensure that ackerman front link will not move -->
		<child>ackerman_front_link</child>
		<parent>body</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>0</lower>
				<upper>0</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
    <link name="ackerman_left_link">                             <!-- setting ackerman left link -->
	<pose>0.6870316 -0.622921 0.4 0 1.57079 -1.08734</pose> 
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='ackerman_left_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>0.4</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='ackerman_left_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>0.4</length>
			</cylinder>
		</geometry>
		<material>
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='ackerman_left_link_joint' type='revolute'>      <!-- setting the first joint of the ackerman mechainsem this joint connects between ackerman front link and ackerman left link -->
		<pose>0 0 0.2 0 0 0</pose>                                 <!-- this joint defined to create a revolute connection between the two links mentioned -->
		<child>ackerman_left_link</child>
		<parent>ackerman_front_link</parent>
		<axis>
			<xyz>0 0 1</xyz>        <!-- setting the axis which around it the joint revolves -->
			<limit>                  <!-- setting the joint movment limits upper and lower -->
				<lower>-0.523599</lower>
				<upper>+0.523599</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
    <link name="ackerman_right_link">              <!-- setting ackerman right link -->
	<pose>-0.5270316 -0.622921 0.4 0 1.57079 -2.054253</pose> 
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='ackerman_right_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>0.4</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='ackerman_right_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>0.4</length>
			</cylinder>
		</geometry>
		<material>
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='ackerman_right_link_joint' type='revolute'>	<!-- setting the second joint of the ackerman mechainsem this joint connects between ackerman front link and ackerman right link -->									  <!-- this joint defined to create a revolute connection between the two links mentioned -->
		<pose>0 0 0.2 0 0 0</pose>
		<child>ackerman_right_link</child>
		<parent>ackerman_front_link</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>-0.523599</lower>
				<upper>+0.523599</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
    <link name="ackerman_back_link">				<!-- setting ackerman back link, This link closes a 4 bar mechanisem -->
	<pose>0.08 -0.445842 0.4 0 1.57079 0</pose>  
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='ackerman_back_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>1.02813</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='ackerman_back_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>1.02813</length>
			</cylinder>
		</geometry>
		<material>
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='ackerman_backL_link_joint' type='revolute'>	<!-- setting the third joint of the ackerman mechainsem this joint connects between ackerman back link and ackerman left link -->									  <!-- this joint defined to create a revolute connection between the two links mentioned -->
		<pose>0 0 0.514065 0 0 0</pose>
		<child>ackerman_back_link</child>
		<parent>ackerman_left_link</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>-0.523599</lower>
				<upper>+0.523599</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
	<joint name='ackerman_backR_link_joint' type='revolute'>	<!-- setting the forth joint of the ackerman mechainsem this joint connects between ackerman back link and ackerman right link -->									  <!-- this joint defined to create a revolute connection between the two links mentioned -->
		<pose>0 0 -0.514065 0 0 0</pose>
		<child>ackerman_back_link</child>
		<parent>ackerman_right_link</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>-0.523599</lower>
				<upper>+0.523599</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
    <link name="wheel_left_link">				<!-- setting the connecting link between the ackerman mechanisem and the left wheel -->
	<pose>0.88 -0.8 0.4 0 1.57079 -3.141593</pose> 
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='wheel_left_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>0.2</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='wheel_left_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>0.2</length>
			</cylinder>
		</geometry>
		<material>
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='wheel_left_link_joint' type='revolute'>  <!-- setting fixed joint between the connecting left link and the ackerman mechanisem -->
		<pose>0 0 0.1 0 0 0</pose>
		<child>wheel_left_link</child>
		<parent>ackerman_left_link</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>0</lower>
				<upper>0</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint>
    <link name="wheel_right_link">				<!-- setting the connecting link between the ackerman mechanisem and the right wheel -->
	<pose>-0.72 -0.8 0.4 0 1.57079 0</pose> 
	<inertial>
		<pose>0 0 0 0 0 0</pose>
			<mass>20</mass>
			<inertia>
			<ixx>6.03</ixx>
			<ixy>0</ixy>
			<ixz>0</ixz>
			<iyy>6.03</iyy>
			<iyz>0</iyz>
			<izz>0.025</izz>
			</inertia>
	</inertial>
	<collision name='wheel_right_link_collision'>
	<pose>0 0 0 0 0 0</pose>
	<geometry>
		<cylinder>
			<radius>0.02</radius>
			<length>0.2</length>
		</cylinder>
	</geometry>
	<surface>
		<contact>
			<ode/>
		</contact>
		<friction>
			<ode>
				<mu>1</mu>
				<mu2>1</mu2>
			</ode>
		</friction>
		</surface>
	</collision>
	<visual name='wheel_right_link_visual'>
		<pose>0 0 0 0 0 0</pose>
		<geometry>
			<cylinder>
				<radius>0.02</radius>
				<length>0.2</length>
			</cylinder>
		</geometry>
		<material>
			<script>
				<name>Gazebo/GreyTransparent</name>
				<uri>__default__</uri>
			</script>
		</material>
	</visual>
	<gravity>0</gravity>
	<velocity_decay>
		<linear>0</linear>
		<angular>0</angular>
	</velocity_decay>
	<self_collide>0</self_collide>
    </link>
	<joint name='wheel_right_link_joint' type='revolute'>	  <!-- setting fixed joint between the connecting right link and the ackerman mechanisem -->
		<pose>0 0 0.1 0 0 0</pose>
		<child>wheel_right_link</child>
		<parent>ackerman_right_link</parent>
		<axis>
			<xyz>0 0 1</xyz>
			<limit>
				<lower>0</lower>
				<upper>0</upper>
			</limit>
			<dynamics/>
		</axis>
	</joint> 
	<link name='back_left_wheel'>				<!-- setting the back left wheel -->
		<pose>1.1 3.2 0.4 0 0 0</pose>
			<inertial>
				<pose>0 0 0 0 0 0</pose>
				<mass>63.358</mass>
				<inertia>
					<ixx>5.603</ixx>
					<ixy>-5.3e-07</ixy>
					<ixz>-1.26e-05</ixz>
					<iyy>3.2307</iyy>
					<iyz>-2.51e-06</iyz>
					<izz>3.2307</izz>
				</inertia>
			</inertial>
		<collision name='back_left_wheel_collision'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/back_left_wheel.dae</uri>
				</mesh>
			</geometry>
			<surface>
				<contact>
					<ode/>
				</contact>
			<friction>
				<ode>
					<mu>0.5</mu>
					<mu2>0.3</mu2>
				</ode>
			</friction>
			</surface>
		</collision>
		<visual name='back_left_wheel_visual'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/back_left_wheel.dae</uri>
				</mesh>
			</geometry>
		</visual>
		<gravity>1</gravity>
		<velocity_decay>
			<linear>0</linear>
			<angular>0</angular>
		</velocity_decay>
		<self_collide>0</self_collide>
	</link>
	<joint name='back_left_wheel_joint' type='revolute'>		<!-- setting back left wheel joint, a revolute joint to make the wheel revolve the hammvee axle -->
		<child>back_left_wheel</child>
		<parent>body</parent>
		<axis>
			<xyz>1 0 0</xyz>
			<limit>
				<lower>-1e+16</lower>
				<upper>1e+16</upper>
			</limit>
			<dynamics>	
				<damping>0.5</damping>		
			</dynamics>
		</axis>
	</joint>
	<link name='front_left_wheel'>					<!-- setting the front left wheel -->
		<pose>1.1 -0.8 0.4 0 0 0</pose>
			<inertial>
				<pose>0 0 0 0 0 0</pose>
				<mass>63.358</mass>
				<inertia>
					<ixx>5.603</ixx>
					<ixy>-5.3e-07</ixy>
					<ixz>-1.26e-05</ixz>
					<iyy>3.2307</iyy>
					<iyz>-2.51e-06</iyz>
					<izz>3.2307</izz>
				</inertia>
			</inertial>
		<collision name='front_left_wheel_collision'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/front_left_wheel.dae</uri>
				</mesh>
			</geometry>
			<surface>
				<contact>
					<ode/>
				</contact>
			<friction>
				<ode>
					<mu>0.5</mu>
					<mu2>0.3</mu2>
				</ode>
			</friction>
			</surface>
		</collision>
		<visual name='front_left_wheel_visual'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/front_left_wheel.dae</uri>
				</mesh>
			</geometry>
		</visual>
		<gravity>1</gravity>
		<velocity_decay>
			<linear>0</linear>
			<angular>0</angular>
		</velocity_decay>
		<self_collide>0</self_collide>
	</link>
	<joint name='front_left_wheel_joint' type='revolute'>			<!-- setting front left wheel joint, a revolute joint to make the wheel revolve around the connecting link axis -->
		<child>front_left_wheel</child>
		<parent>wheel_left_link</parent> 
		<axis>
			<xyz>1 0 0</xyz>
			<limit>
				<lower>-1e+16</lower>
				<upper>1e+16</upper>
			</limit>
			<dynamics>	
				<damping>0.5</damping>		
			</dynamics>
		</axis>
	</joint>
	<link name='back_right_wheel'>						<!-- setting the back right wheel -->
		<pose>-1 3.2 0.4 0 3.14159 0</pose>
			<inertial>
				<pose>0 0 0 0 0 0</pose>
				<mass>63.358</mass>
				<inertia>
					<ixx>5.603</ixx>
					<ixy>-5.3e-07</ixy>
					<ixz>-1.26e-05</ixz>
					<iyy>3.2307</iyy>
					<iyz>-2.51e-06</iyz>
					<izz>3.2307</izz>
				</inertia>
			</inertial>
		<collision name='back_right_wheel_collision'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/back_right_wheel.dae</uri>
				</mesh>
			</geometry>
			<surface>
				<contact>
					<ode/>
				</contact>
			<friction>
				<ode>
					<mu>0.5</mu>
					<mu2>0.3</mu2>
				</ode>
			</friction>
			</surface>
		</collision>
		<visual name='back_right_wheel_visual'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/back_right_wheel.dae</uri>
				</mesh>
			</geometry>
		</visual>
		<gravity>1</gravity>
		<velocity_decay>
			<linear>0</linear>
			<angular>0</angular>
		</velocity_decay>
		<self_collide>0</self_collide>
	</link>
	<joint name='back_right_wheel_joint' type='revolute'>			<!-- setting back right wheel joint, a revolute joint to make the wheel revolve around the hammvee axle -->
		<child>back_right_wheel</child>
		<parent>body</parent>
		<axis>
			<xyz>1 0 0</xyz>
			<limit>
				<lower>-1e+16</lower>
				<upper>1e+16</upper>
			</limit>
			<dynamics>	
				<damping>0.5</damping>		
			</dynamics>
		</axis>2
	</joint>
	<link name='front_right_wheel'>					<!-- setting the front right wheel -->
		<pose>-1 -0.8 0.4 0 3.14159 0</pose>
			<inertial>
				<pose>0 0 0 0 0 0</pose>
				<mass>63.358</mass>
				<inertia>
					<ixx>5.603</ixx>
					<ixy>-5.3e-07</ixy>
					<ixz>-1.26e-05</ixz>
					<iyy>3.2307</iyy>
					<iyz>-2.51e-06</iyz>
					<izz>3.2307</izz>
				</inertia>
			</inertial>
		<collision name='front_right_wheel_collision'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/front_right_wheel.dae</uri>
				</mesh>
			</geometry>
			<surface>
				<contact>
					<ode/>
				</contact>
			<friction>
				<ode>
					<mu>0.5</mu>
					<mu2>0.3</mu2>
				</ode>
			</friction>
			</surface>
		</collision>
		<visual name='front_right_wheel_visual'>
			<pose>0 0 0 0 0 0</pose>
			<geometry>
				<mesh>
					<scale>1 1 1</scale>
					<uri>model://hammvee/models/front_right_wheel.dae</uri>
				</mesh>
			</geometry>
		</visual>
		<gravity>1</gravity>
		<velocity_decay>
			<linear>0</linear>
			<angular>0</angular>
		</velocity_decay>
		<self_collide>0</self_collide>
	</link>
	<joint name='front_right_wheel_joint' type='revolute'>		<!-- setting front right wheel joint, a revolute joint to make the wheel revolve around the connecting link axis -->
		<child>front_right_wheel</child>
		<parent>wheel_right_link</parent>
		<axis>
			<xyz>1 0 0</xyz>
			<limit>
				<lower>-1e+16</lower>
				<upper>1e+16</upper>
			</limit>
			<dynamics>	
				<damping>0.5</damping>		
			</dynamics>
		</axis>
	</joint>


    <include>
      <uri>model://velodyne</uri>
      <pose>0 2 3 0 0 0</pose>
      <name>velodyne</name>
    </include>
    <joint name='velodyne_joint' type='revolute'>
      <child>velodyne::base</child>
      <parent>body</parent>
      <axis>
        <xyz>0 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
<!--	
    <include>
      <uri>model://velodyne2</uri>
      <pose>-0.5 0 2.5 0 0 0</pose>
      <name>velodyne2</name>
    </include>
    <joint name='velodyne2_joint' type='revolute'>
      <child>velodyne2::base</child>
      <parent>body</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
-->
	<!-- loading hammvee_drive_control plugin, enables low level control on the wheel steering -->
	<plugin name="hammvee_drive_control" filename="libhammvee_drive_plugin.so"/> 


  </model>
</sdf>
